{
    "AWSTemplateFormatVersion": "2010-09-09",

    "Description": "Accurics QA - CFT Test Stack - Spat",

    "Parameters": {
        "MyInstanceNameTag": {
            "Type": "String",
            "AllowedPattern": "^[a-zA-Z0-9_]*$",
            "ConstraintDescription": "Any alphanumeric characters allowed",
            "Description": "Providing Name for the server",
            "MaxLength": 100,
            "MinLength": 4
        },
        "MySecurityGroupNameTag": {
            "Type": "String",
            "AllowedPattern": "^[a-zA-Z0-9_]*$",
            "ConstraintDescription": "Any alphanumeric characters allowed",
            "Description": "Providing Name for Security Group",
            "MaxLength": 100,
            "MinLength": 4
        }
    },

    "Resources": {
        "acqaCftTestStack1SG1": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "for the app nodes that allow ssh, http and docker ports",
                "SecurityGroupIngress": [
                    {
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": "80",
                        "IpProtocol": "tcp",
                        "ToPort": "80"
                    },
                    {
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": "22",
                        "IpProtocol": "tcp",
                        "ToPort": "22"
                    },
                    {
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": "2375",
                        "IpProtocol": "tcp",
                        "ToPort": "2375"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": { "Ref": "MySecurityGroupNameTag"}
                    },
                    {
                        "Key":"ACQAResource",
                        "Value":"true"
                    }
                ]
            }
        },

        "acqaCftTestStack1Inst1": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "ImageId": "ami-07423fb63ea0a0930",
                "InstanceType": "t2.micro",
                "KeyName": "acqa-cft-test-stack1-inst1-key1",
                "SecurityGroups": [
                    {
                        "Ref": "acqaCftTestStack1SG1"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Ref": "MyInstanceNameTag"
                        }
                    },
                    {
                        "Key":"ACQAResource",
                        "Value":"true"
                    }
                ],
                "UserData": {
                    "Fn::Base64": "#!/bin/bash\napt-get update -qq\napt-get install -y apt-transport-https ca-certificates\napt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D\necho \"deb https://apt.dockerproject.org/repo ubuntu-xenial main\" | tee /etc/apt/sources.list.d/docker.list\napt-get update -qq\napt-get purge lxc-docker || true\napt-get -y install linux-image-extra-$(uname -r) linux-image-extra-virtual\napt-get -y install docker-engine\nusermod -aG docker ubuntu\nmkdir -p /etc/systemd/system/docker.service.d\nprintf \"[Service]\\nExecStart=\\nExecStart=/usr/bin/dockerd -H fd:// -H tcp://0.0.0.0:2375\\n\" >>  /etc/systemd/system/docker.service.d/docker.conf\nsystemctl daemon-reload\nsystemctl restart docker    \n"
                }
            }
        }
    }
}
